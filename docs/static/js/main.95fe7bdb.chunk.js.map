{"version":3,"sources":["components/Header.js","helper.js","components/Form.js","components/Summary.js","components/Result.js","components/Spinner.js","App.js","index.js"],"names":["HeaderContainer","styled","header","HeaderText","h1","Header","title","capitalize","text","charAt","toUpperCase","slice","Field","div","Label","label","Select","select","InputRadio","input","Button","button","Error","Form","setSummary","setLoader","useState","brand","year","plan","data","setData","error","setError","obtainInfo","ev","target","name","value","onSubmit","preventDefault","trim","result","difference","Date","getFullYear","obtainYearDifference","increment","obtainBrand","planIncrease","obtainPlan","parseFloat","toFixed","setTimeout","quotation","Number","onChange","type","checked","SummaryWrapper","Summary","Message","p","QuotationResult","QuotationText","Result","nodeRef","React","useRef","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","ref","Spinner","Wrapper","FormWrapper","App","summary","loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95fe7bdb.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst HeaderContainer = styled.header`\n  background-color: #26c6da;\n  padding: 10px;\n  font-weight: bold;\n  color: #ffffff;\n`;\nconst HeaderText = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: 'Slabo 27px', serif;\n  text-align: center;\n`;\n\nconst Header = ({ title }) => {\n  return (\n    <HeaderContainer>\n      <HeaderText>{title}</HeaderText>\n    </HeaderContainer>\n  );\n};\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Header;\n","export function obtainYearDifference(year) {\n  return new Date().getFullYear() - year;\n}\n\n// calculate price according to brand\nexport function obtainBrand(brand) {\n  let increment;\n\n  switch (brand) {\n    case 'european':\n      increment = 1.3;\n      break;\n    case 'american':\n      increment = 1.15;\n      break;\n    case 'asian':\n      increment = 1.05;\n      break;\n    default:\n      break;\n  }\n  return increment;\n}\n\n// calculate insurance type according to selected plan\nexport function obtainPlan(plan) {\n  return plan === 'basic' ? 1.2 : 1.5;\n}\n// Capitalize\nexport function capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n}\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { obtainYearDifference, obtainBrand, obtainPlan } from '../helper';\nimport PropTypes from 'prop-types';\n\nconst Field = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n  display: block;\n  width: 100%;\n  padding: 1rem;\n  border: 1px solid #e1e1e1;\n  -webkit-appearance: none; //removes 'normal' appearance of select\n`;\n\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`;\n\nconst Button = styled.button`\n  background-color: #00838f;\n  font-size: 16px;\n  font-weight: bold;\n  width: 100%;\n  padding: 1rem;\n  color: #fff;\n  text-transform: uppercase;\n  border: none;\n  transition: background-color 0.3s ease;\n  margin-top: 2rem;\n\n  &:hover {\n    background-color: #26c6da;\n    cursor: pointer;\n  }\n`;\n\nconst Error = styled.div`\n  background-color: red;\n  color: white;\n  padding: 1rem;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst Form = ({ setSummary, setLoader }) => {\n  const [data, setData] = useState({\n    brand: '',\n    year: '',\n    plan: '',\n  });\n  const [error, setError] = useState(false);\n\n  // extract state values\n  const { brand, year, plan } = data;\n\n  // read form data and insert into state\n  const obtainInfo = (ev) => {\n    setData({\n      ...data,\n      [ev.target.name]: ev.target.value,\n    });\n  };\n\n  // when user presses submit\n  const handleQuotation = (ev) => {\n    ev.preventDefault();\n    if (brand.trim() === '' || year.trim() === '' || plan.trim() === '') {\n      setError(true);\n      return;\n    }\n    setError(false);\n\n    //   start with a 2000$ base\n    let result = 2000;\n\n    // obtain years difference\n    const difference = obtainYearDifference(year);\n    // subtract 3% value each year\n    result -= (difference * 3 * result) / 100;\n    //   american ->increases 15%\n    //   asian ->increases 5%\n    //   european ->increases 30%\n    result = obtainBrand(brand) * result;\n\n    //   Basic plan increases 20%\n    //   Complete plan increases 50%\n    const planIncrease = obtainPlan(plan);\n    result = parseFloat(planIncrease * result).toFixed(2); //just 2 digits floating\n\n    // Total with loader\n    setLoader(true);\n    setTimeout(() => {\n      // removes spinner\n      setLoader(false);\n      // passes info to main component\n      setSummary({\n        quotation: Number(result),\n        data,\n      });\n    }, 3000);\n  };\n  return (\n    <form onSubmit={handleQuotation}>\n      {error ? <Error>All fields are required</Error> : null}\n      <Field>\n        <Label>Car brand </Label>\n        <Select name=\"brand\" value={brand} onChange={obtainInfo}>\n          <option value=\"\">-- Select --</option>\n          <option value=\"american\">american</option>\n          <option value=\"european\">european</option>\n          <option value=\"asian\">asian</option>\n        </Select>\n      </Field>\n      <Field>\n        <Label>Car year </Label>\n        <Select name=\"year\" value={year} onChange={obtainInfo}>\n          <option value=\"\">-- Select --</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2015\">2015</option>\n          <option value=\"2014\">2014</option>\n          <option value=\"2013\">2013</option>\n          <option value=\"2012\">2012</option>\n        </Select>\n      </Field>\n      <Field>\n        <Label>Plan </Label>\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"basic\"\n          checked={plan === 'basic'}\n          onChange={obtainInfo}\n        />\n        Basic\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"complete\"\n          checked={plan === 'complete'}\n          onChange={obtainInfo}\n        />\n        Complete\n      </Field>\n      <Button type=\"submit\">Quote</Button>\n    </form>\n  );\n};\nForm.propTypes = {\n  setSummary: PropTypes.func.isRequired,\n  setLoader: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { capitalize } from '../helper';\nimport PropTypes from 'prop-types';\n\nconst SummaryWrapper = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #00838f;\n  color: #fff;\n  margin-top: 1rem;\n`;\n\nconst Summary = ({ data }) => {\n  // extract data\n  const { brand, year, plan } = data;\n  //to show or hide component\n  if (brand === '' || year === '' || plan === '') return null;\n  return (\n    <SummaryWrapper>\n      <h2>Quotation summary</h2>\n      <ul>\n        <li>Car brand: {capitalize(brand)}</li>\n        <li>Car year: {year}</li>\n        <li>Selected plan: {capitalize(plan)}</li>\n      </ul>\n    </SummaryWrapper>\n  );\n};\nSummary.propTypes = {\n  data: PropTypes.object.isRequired,\n};\nexport default Summary;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nconst Message = styled.p`\n  background-color: rgb(127, 224, 237);\n  margin-top: 2rem;\n  padding: 1rem;\n  text-align: center;\n`;\nconst QuotationResult = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n  border: 1px solid #26c6da;\n  background-color: rgb(127, 224, 237);\n  margin-top: 1rem;\n  position: relative;\n`;\n\nconst QuotationText = styled.p`\n  color: #00838f;\n  margin: 0;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nconst Result = ({ quotation }) => {\n  // nodeRef is a ref object that should point to the transitioning child\n  // this avoids warnings because of the react strict mode\n  const nodeRef = React.useRef(null);\n\n  return quotation === 0 ? (\n    <Message>Choose brand, year and type of insurance plan</Message>\n  ) : (\n    <QuotationResult>\n      <TransitionGroup component=\"div\" className=\"resultado\">\n        <CSSTransition\n          nodeRef={nodeRef} // nodeRef\n          classNames=\"resultado\"\n          key={quotation}\n          timeout={{ enter: 500, exit: 500 }}\n        >\n          <QuotationText ref={nodeRef}>\n            {' '}\n            {/* nodeRef */}\n            The total amount is: {quotation} $\n          </QuotationText>\n        </CSSTransition>\n      </TransitionGroup>\n    </QuotationResult>\n  );\n};\nResult.propTypes = {\n  quotation: PropTypes.number.isRequired,\n};\n\nexport default Result;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"sk-circle\">\n      <div className=\"sk-circle1 sk-child\"></div>\n      <div className=\"sk-circle2 sk-child\"></div>\n      <div className=\"sk-circle3 sk-child\"></div>\n      <div className=\"sk-circle4 sk-child\"></div>\n      <div className=\"sk-circle5 sk-child\"></div>\n      <div className=\"sk-circle6 sk-child\"></div>\n      <div className=\"sk-circle7 sk-child\"></div>\n      <div className=\"sk-circle8 sk-child\"></div>\n      <div className=\"sk-circle9 sk-child\"></div>\n      <div className=\"sk-circle10 sk-child\"></div>\n      <div className=\"sk-circle11 sk-child\"></div>\n      <div className=\"sk-circle12 sk-child\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Summary from './components/Summary';\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst FormWrapper = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [summary, setSummary] = useState({\n    quotation: 0,\n    data: {\n      brand: '',\n      year: '',\n      plan: '',\n    },\n  });\n\n  // spinner\n  const [loader, setLoader] = useState(false);\n\n  // extract data\n  const { quotation, data } = summary;\n\n  return (\n    <Wrapper>\n      <Header title=\"Car insurance quotation\" />\n      <FormWrapper>\n        <Form setSummary={setSummary} setLoader={setLoader} />\n        {loader ? <Spinner /> : null}\n        <Summary data={data} />\n        {!loader ? <Result quotation={quotation} /> : null}\n      </FormWrapper>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}